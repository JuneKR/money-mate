import React, { useState } from "react";
import styles from "@/styles/Home.module.css";
import Head from "next/head";
import { useRouter } from "next/router";
import Backdrop from "@mui/material/Backdrop";
import Box from "@mui/material/Box";
import Modal from "@mui/material/Modal";
import Fade from "@mui/material/Fade";
import Typography from "@mui/material/Typography";
import { urlServer } from "@/API";

const style = {
  justifyContent: "center",
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)",
  width: 400,
  height: 300,
  bgcolor: "#141332",
  boxShadow: 24,
  p: 4,
};

const RegisterPage: React.FC = () => {
  const router = useRouter();
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [passwordWarning, setPasswordWarning] = useState("");
  const [open, setOpen] = React.useState(false);

  const registerInformation = {
    first_name: firstName,
    last_name: lastName,
    date_of_birth: null,
    gender: null,
    risk_level: 0,
    email: email,
    password: password,
    conf_password: confirmPassword,
  };
  const handleOpen = () => {
    setOpen(true);
  };
  const handleClose = () => {
    setOpen(false);
  };

  const href = "/UserManagement/login";
  const register = async () => {
    try {
      const response = await fetch(`${urlServer}register`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(registerInformation),
      });
      if (response.ok) {
        const data = await response.json();
        console.log(data);
        window.location.href = href;
      } else {
        const errorData = await response.json();
        console.log(errorData);
        handleOpen();
      }
    } catch (error) {
      console.error(error);
      handleOpen();
    }
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    register();
  };
  const handleLogin = () => {
    router.push("/UserManagement/login");
  };

  return (
    <>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" /> */}
        {/* {styles.main} */}
      </Head>

      <main className={styles.main}>
        <div
          style={{ backgroundColor: "#1D1D41" }}
          className="shadow-2xl flex items-center justify-center w-full h-screen min-h-screen mx-auto lg:flex-row"
        >
          <div className="items-center w-full px-4 mt-4 space-y-4 lg:w-2/3 lg:mt-0 sm:px-16 md:px-32 lg:px-0 xl:mx-24 lg:mx-0">
            <div
              style={{ backgroundColor: "#141332" }}
              className="shadow-2xl w-full px-2 py-4 mx-auto sm:max-w-md sm:px-5 pt-14"
            >
              <div className="flex-1 px-2">
                <h3 className="text-2xl font-bold text-white ">
                  สร้างบัญชีผู้ใช้งาน
                </h3>
                <form action="#" className="my-4" onSubmit={handleSubmit}>
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <label htmlFor="firstname" className="block">
                        <span className="block m-1 font-bold text-white">
                          ชื่อจริง
                        </span>
                        <input
                          type="text"
                          id="fname"
                          placeholder="First Name"
                          style={{
                            width: "100%",
                            height: "50px",
                            backgroundColor: "#27264E",
                          }}
                          className="text-white block w-full px-3 py-2 text-sm placeholder-gray-500 rounded-2xl shadow-2xl placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 invalid:text-pink-700 invalid:focus:ring-pink-700 invalid:focus:border-pink-700 peer"
                          value={firstName}
                          onChange={(e) => setFirstName(e.target.value)}
                        />
                        <p className="invisible m-1 text-xs text-pink-700 peer-invalid:visible">
                          Invalid First Name
                        </p>
                      </label>
                    </div>
                    <div>
                      <label htmlFor="lastname" className="block">
                        <span className="block m-1 font-bold text-white">
                          นามสกุล
                        </span>
                        <input
                          type="text"
                          id="lname"
                          placeholder="Last Name"
                          style={{
                            width: "100%",
                            height: "50px",
                            backgroundColor: "#27264E",
                          }}
                          className="text-white block w-full px-3 py-2 text-sm placeholder-gray-500 rounded-2xl shadow-2xl placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 invalid:text-pink-700 invalid:focus:ring-pink-700 invalid:focus:border-pink-700 peer"
                          value={lastName}
                          onChange={(e) => setLastName(e.target.value)}
                        />
                        <p className="invisible m-1 text-xs text-pink-700 peer-invalid:visible">
                          Invalid Last Name
                        </p>
                      </label>
                    </div>
                  </div>
                  <label htmlFor="email" className="block">
                    <span className="block m-1 font-bold text-white">
                      อีเมล
                    </span>
                    <input
                      type="text"
                      id="code"
                      placeholder="Email"
                      style={{
                        width: "100%",
                        height: "50px",
                        backgroundColor: "#27264E",
                      }}
                      className="text-white block w-full px-3 py-2 text-sm placeholder-gray-500 rounded-2xl shadow-2xl placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 invalid:text-pink-700 invalid:focus:ring-pink-700 invalid:focus:border-pink-700 peer"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                    />
                    <p className="invisible m-1 text-xs text-pink-700 peer-invalid:visible">
                      Invalid Email
                    </p>
                  </label>
                  <label htmlFor="password" className="block">
                    <span className="block m-1 font-bold text-white">
                      รหัสผ่าน
                    </span>
                    <input
                      type="password"
                      id="password"
                      placeholder="Password"
                      minLength={5}
                      style={{
                        width: "100%",
                        height: "50px",
                        backgroundColor: "#27264E",
                      }}
                      className="text-white block w-full px-3 py-2 text-sm placeholder-gray-500 rounded-2xl shadow-2xl placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 invalid:text-pink-700 invalid:focus:ring-pink-700 invalid:focus:border-pink-700 peer"
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                    />
                    <p className="invisible m-1 text-xs text-pink-700 peer-invalid:visible">
                      less than 5 characters
                    </p>
                  </label>
                  <label htmlFor="password" className="block">
                    <span className="block m-1 font-bold text-white">
                      ยืนยันรหัสผ่าน
                    </span>
                    <input
                      type="password"
                      id="password"
                      placeholder="Confirm Password"
                      minLength={5}
                      style={{
                        width: "100%",
                        height: "50px",
                        backgroundColor: "#27264E",
                      }}
                      className="text-white block w-full px-3 py-2 text-sm placeholder-gray-500 rounded-2xl shadow-2xl placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 invalid:text-pink-700 invalid:focus:ring-pink-700 invalid:focus:border-pink-700 peer"
                      value={confirmPassword}
                      onChange={(e) => {
                        setConfirmPassword(e.target.value);
                        if (
                          password !== e.target.value &&
                          password !== "" &&
                          e.target.value !== ""
                        ) {
                          e.target.classList.add("border-red-500");
                          setPasswordWarning("Passwords do not match");
                          // <p className="m-1 text-xs text-pink-700 peer-invalid:visible">
                          //   less than 5 characters
                          // </p>;
                        } else {
                          e.target.classList.remove("border-green-500");
                          setPasswordWarning("");
                        }
                      }}
                    />
                    {passwordWarning && (
                      <p className="m-1 text-xs text-red-500">
                        {passwordWarning}
                      </p>
                    )}
                  </label>
                  <button
                    type="submit"
                    className="w-full inline-flex mb-4 items-center justify-center text-gray-100  font-medium leading-none mt-8 bg-purple-600 rounded-lg py-3 px-8 border border-transparent transform-gpu hover:-translate-y-0.5  transition-all duration-150 hover:text-gray-200 hover:bg-blue-700 text-sm sm:text-base"
                  >
                    สร้างบัญชี
                  </button>
                </form>
                <div className="py-2">
                  <button onClick={handleLogin}>
                    <p className="text-white hover:text-blue-500">
                      มีบัญชีแล้ว? กลับไปหน้าลงชื่อเข้าใช้
                    </p>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <Modal
          aria-labelledby="transition-modal-title"
          aria-describedby="transition-modal-description"
          open={open}
          onClose={handleClose}
          closeAfterTransition
          slots={{ backdrop: Backdrop }}
          slotProps={{
            backdrop: {
              timeout: 500,
            },
          }}
        >
          <Fade in={open}>
            <Box
              sx={style}
              className="rounded-lg juestify-center item-center"
            >
              <Typography
                id="transition-modal-title"
                variant="h6"
                component="h2"
                className="rounded-full px-4 pt-5 text-center"
              >
                <h1 className="text-2xl bg-red-500 shadow-2xl p-3 rounded-full">
                  แจ้งเตือน!
                </h1>
              </Typography>
              <Typography
                id="transition-modal-description"
                sx={{ mt: 2 }}
                className="pb-5"
              >
                ข้อมูลของคุณไม่ถูกต้องหรือไม่มีข้อมูล
                โปรดตรวจสอบอย่างละเอียดอีกครั้ง
              </Typography>
              <div className="px-20">
                <button
                  onClick={handleClose}
                  className="w-full items-center justify-center text-gray-100  font-medium leading-none bg-purple-600 rounded-lg py-3 px-8 border border-transparent transform-gpu hover:-translate-y-0.5  transition-all duration-150 hover:text-gray-200 hover:bg-blue-700 text-sm sm:text-base"
                >
                  โอเค
                </button>
              </div>
            </Box>
          </Fade>
        </Modal>
      </main>
    </>
  );
};

export default RegisterPage;
